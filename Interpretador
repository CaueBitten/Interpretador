/*
 * Classe que realiza o interpretador
 * Padrões utilizados: Singleton
 */
package model;

public final class Interpretador {
	
	private static Interpretador INSTANCE;
	
	private static Memoria memoria; 
	
	private static boolean runBit = true;
	
	
	public static Interpretador getInstance(){
		if(INSTANCE == null){
			INSTANCE = new Interpretador();
		}
		return INSTANCE;
	}
	
	public Interpretador(){
		inicializarInterpretador();
	}
	
	private static void inicializarInterpretador(){
		new Memoria();
		
	}
	
	 public static void interpretar(){
		int enderecoInicial = 0;										
		int enderecoAtual = enderecoInicial;
		
		while(runBit){
			Dado dadoAtual = Memoria.getMemoria(enderecoAtual);		
			enderecoAtual += 1;
			
			Instrucao instrucao = new Instrucao(dadoAtual.getConteudo());
			
			if(instrucao.executa()){
				System.out.println(instrucao.getResultado());
			}
			else{
				runBit = false;
				System.out.println("Erro na linha " + enderecoAtual + "! Interpretador foi forçado a parar.");
			}
			
			
			//Fim do programa carregado na memória
			if(dadoAtual.getConteudo() == "null"){
				runBit = false;
			}
			
		}
	} 
}
