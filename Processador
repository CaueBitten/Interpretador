package model;

public final class Processador {
	
	private static Processador INSTANCE;
	
	private static Memoria memoria; 
	private static Interpretador interpretador;
	
	private static int contadorPrograma;
	private static Registrador rAcumulador;
	private static Registrador rInstrucaoCorrente;
	
	private static boolean runBit = true;
	
	public static Processador getInstance(){
		if(INSTANCE == null){
			INSTANCE = new Processador();
		}
		return INSTANCE;
	}
	
	public Processador(){
		inicializarProcessador();
	}
	
	private static void inicializarProcessador(){
		new Memoria(4096);
	}
	
	/* public static void interpretar(){
		int enderecoInicial = 1;
		contadorPrograma = enderecoInicial;
		
		while(runBit){
			instrucaoCorrente.setDado(Memoria.getMemoria(contadorPrograma));
			tipoInstrucao = getTipoInstrucao(instrucaoCorrente);
			executarInstrucao(instrucaoCorrente);
			contadorPrograma += 1;
		}
	} */
}
